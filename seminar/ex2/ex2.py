# –ó–∞–¥–∞–Ω–∏–µ No2
# üìå –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–º—è, –ª–∏—á–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ (–æ—Ç 1 –¥–æ 7).
# üìå –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –≤–≤–æ–¥–∞ –¥–æ–±–∞–≤–ª—è–π—Ç–µ –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ JSON —Ñ–∞–π–ª.
# üìå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç—Å—è –ø–æ —É—Ä–æ–≤–Ω—é –¥–æ—Å—Ç—É–ø–∞.
# üìå –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã—Å—Ç—É–ø–∞–µ—Ç –∫–ª—é—á—ë–º –¥–ª—è –∏–º–µ–Ω–∏.
# üìå –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã —É–Ω–∏–∫–∞–ª—å–Ω—ã –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞.
# üìå –ü—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è.
import json
from json import JSONDecodeError

ACCESS_LOW = 1
ACCESS_HIGH = 7


def input_data():
    is_id_unique = True
    is_access_level_ok = False
    user_list = list()
    while True:
        # read from file
        try:
            with open('users.json', 'r+', encoding='utf-8') as f:
                user_list = json.load(f)
        except Exception:
            print("Records are empty.")

        # check if id is unique
        name, id_user, access_lvl = input('Enter name, ID, access_lvl: ').split()
        access_lvl = int(access_lvl)
        set_ids = set()
        for user in user_list:
            if id_user in user.keys():
                is_id_unique = False
                print('Id is not unique')
                break
        # check if access level is between allowed level
        if not ACCESS_LOW <= access_lvl <= ACCESS_HIGH:
            is_access_level_ok = False
            print('Access level should be between 1 and 7')
        else:
            new_user = {id_user: name, 'access_lvl': access_lvl}
            user_list.append(new_user)
            is_access_level_ok = True

        # write to file
        if is_id_unique and is_access_level_ok:
            with open('users.json', 'w') as f:
                json.dump(user_list, f, ensure_ascii=False, indent=2)


if __name__ == "__main__":
    input_data()
